# Clone a remote Git repository to your local machine
git clone <repository_url>

# Check the status of your working directory and see changes
git status

# Add changes to the staging area for the next commit
git add <file(s)>

# Commit the changes in the staging area with a descriptive message
git commit -m "Your commit message"

# Push committed changes to a remote repository
git push <remote_name> <branch_name>

# Pull changes from a remote repository to your local branch
git pull <remote_name> <branch_name>

# Create a new branch
git branch <branch_name>

# Switch to a different branch
git checkout <branch_name>

# Create and switch to a new branch in one command
git checkout -b <new_branch_name>

# Merge changes from one branch into the current branch
git merge <branch_name>

# View a list of branches and their status
git branch

# View the commit history
git log

# Discard changes in your working directory
git reset --hard

# Revert a commit by creating a new commit that undoes changes
git revert <commit_hash>

# Create a new tag for a specific commit
git tag <tag_name> <commit_hash>

# List all tags
git tag

# Show the differences between commits, branches, or files
git diff <source> <destination>

# Create a new remote repository on a hosting service like GitHub
# Then, add your local repository to the remote
git remote add <remote_name> <repository_url>

# Fetch changes from a remote repository without merging
git fetch <remote_name>

# Remove a file from version control but keep it in your working directory
git rm --cached <file>

# Rename a file
git mv <old_filename> <new_filename>
